# Models use configs for auto-instantiation of objects, so those have strict structure
defaults:
  - model: ircnn
  - override hydra/hydra_logging: disabled
  - override hydra/job_logging: disabled
  - _self_

hydra:
  run:
    dir: .
  output_subdir: null

# The MLFlow run id of the dataset
dataset: 7bb299184c1941ec90459eb11f1409eb

trainer:
  lr: 1e-3
  epochs: 10
  batch_size: 32
  shuffle: True

  checkpoint_interval_epochs: 2 # checkpoint every 2 epochs
  log_interval_steps: 100 # log metrics every 100 training steps

  # needs to be single-threaded if we store dataset in gpu memory
  # for cpu, can speed up by making multithreaded and settings persistent_workers, pin_memory to true
  num_workers: 0
  persistent_workers: False
  pin_memory: False

  validator:
    batch_size: 32
    num_workers: 0
    persistent_workers: False
    pin_memory: False

tester:
  batch_size: 32
  num_workers: 0
  persistent_workers: False
  pin_memory: False


mode: null # mode is set via CLI override (train or test)
checkpoint: null # {run_id}/{checkpoint_tag} e.g. 30925325/best
device: cuda:0
runs_path: ./runs
experiment_name: fcg-detection
run_name: ${mode}_${model.name}_${dataset}_${now:%Y-%m-%d_%H-%M-%S} # a run is  "mode-model-dataset-time"

# only applied to spectrum
# these are fixed for the most part
# kwargs for auto-instantiation of sequential transformations
eval_transforms:
    - _target_: utils.transforms.Normalizer
      with_std: false

    - _target_: utils.transforms.Resizer
      signal_size: 1024

train_transforms:
    - _target_: utils.transforms.AddNoise
      prob: 0.3
      snr_range: [2, 20]
      mean_noise: 0.0

    - _target_: utils.transforms.Revert
      prob: 0.3

    - _target_: utils.transforms.MaskZeros
      prob: 0.3
      mask_p: [0.01, 0.15]

    - _target_: utils.transforms.ShiftLR
      prob: 0.3
      shift_p: [0.01, 0.1]

    - _target_: utils.transforms.ShiftUD
      prob: 0.3
      shift_p: [0.01, 0.1]

    - _target_: utils.transforms.Normalizer
      with_std: false

    - _target_: utils.transforms.Resizer
      signal_size: 1024
